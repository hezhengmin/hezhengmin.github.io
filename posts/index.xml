<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on MingHe&#39; Blog</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on MingHe&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Mar 2025 23:57:55 +0800</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vue init webpack [專案名稱]</title>
      <link>http://example.org/posts/202503031157/</link>
      <pubDate>Mon, 03 Mar 2025 23:57:55 +0800</pubDate>
      
      <guid>http://example.org/posts/202503031157/</guid>
      <description> 安裝 Vue CLI 安裝 npm install -g vue-cli 安裝 npm install -g @vue/cli- 2. 建立專案 vue init webpack staff 3. 設定vue router 4. 前端專案結構 參考 https://cli.vuejs.org/zh/guide/creating-a-project.html#%E6%8B%89%E5%8F%96-2-x-%E6%A8%A1%E6%9D%BF-%E6%97%A7%E7%89%88%E6%9C%AC </description>
    </item>
    
    <item>
      <title>使用 Vue CLI 建立專案</title>
      <link>http://example.org/posts/202410061259/</link>
      <pubDate>Sun, 06 Oct 2024 00:59:10 +0800</pubDate>
      
      <guid>http://example.org/posts/202410061259/</guid>
      <description> 安裝 Vue CLI 安裝 Vue CLI npm install -g @vue/cli 使用 vue create [專案名稱] 或 vue create . 選擇手動建立專案 (Manually select features) 套件選用 Babel、Vuex、CSS Pre-processors Vue版本，選擇2 Vue-Router為了讓在網址上會多出#，輸入n 選擇Sass/SCSS 存檔在 package.json 不要儲存相關設定 安裝完成 參考 https://hsuchihting.github.io/vue-js/20200404/497821688/ </description>
    </item>
    
    <item>
      <title>VSCode 擴充套件設定</title>
      <link>http://example.org/posts/202410051735/</link>
      <pubDate>Sat, 05 Oct 2024 17:35:13 +0800</pubDate>
      
      <guid>http://example.org/posts/202410051735/</guid>
      <description>Prettier - Code formatter Vue - Official { &amp;#34;prettier.useEditorConfig&amp;#34;: false &amp;#34;prettier.printWidth&amp;#34;: 200, // 超過 XX 個字元就換行 &amp;#34;prettier.tabWidth&amp;#34;: 4, // 程式碼縮排 4 個空格 &amp;#34;prettier.useTabs&amp;#34;: false, // 不使用 tab，預設使用空格 &amp;#34;prettier.semi&amp;#34;: true, // 語句結尾加上分號 &amp;#34;prettier.singleQuote&amp;#34;: false, // 使用單引號，預設使用雙引號 &amp;#34;prettier.quoteProps&amp;#34;: &amp;#34;as-needed&amp;#34;, // 預設 &amp;#39;as-needed&amp;#39;，只有在屬性名稱包含特殊字元或空格時才會使用雙引號。否則，它將使用單引號。 &amp;#34;prettier.trailingComma&amp;#34;: &amp;#34;es5&amp;#34;, // 在物件或陣列最後一個元素後面加上逗號 &amp;#34;prettier.bracketSpacing&amp;#34;: true, // 在物件的左右括號間加上空格 &amp;#34;prettier.arrowParens&amp;#34;: &amp;#34;always&amp;#34;, // 箭頭函式只有一個參數時，也需要括號 &amp;#34;prettier.endOfLine&amp;#34;: &amp;#34;lf&amp;#34;, // 換行符號，預設 lf &amp;#34;prettier.proseWrap&amp;#34;: &amp;#34;preserve&amp;#34;, // 是否要换行 &amp;#34;prettier.bracketSameLine&amp;#34;: true, //結束標籤&amp;gt;不換行 &amp;#34;prettier.htmlWhitespaceSensitivity&amp;#34;: &amp;#34;ignore&amp;#34;, //ignore的話就是所有元素間的空格都會被忽略 &amp;#34;editor.defaultFormatter&amp;#34;: &amp;#34;esbenp.prettier-vscode&amp;#34;, &amp;#34;editor.</description>
    </item>
    
    <item>
      <title>父組件傳遞資料在子組件偵測應用</title>
      <link>http://example.org/posts/20240313/</link>
      <pubDate>Wed, 13 Mar 2024 22:33:07 +0800</pubDate>
      
      <guid>http://example.org/posts/20240313/</guid>
      <description>(CustomSelect.vue)子組件要偵聽父組件(App.vue)來的props，使用watch監聽，來變更子組件的數據。(備註:computed也可以)
父組件 App.vue &amp;lt;template&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; 父組件： &amp;lt;el-input-number v-model=&amp;#34;parentSelectedValue&amp;#34; @change=&amp;#34;handleChange&amp;#34; :min=&amp;#34;1&amp;#34; :max=&amp;#34;10&amp;#34; label=&amp;#34;描述文字&amp;#34;&amp;gt;&amp;lt;/el-input-number&amp;gt; &amp;lt;custom-select :parentSelectedValue=&amp;#34;parentSelectedValue&amp;#34; :title=&amp;#34;title&amp;#34; @returnSelectedChange=&amp;#34;getSelectedValue&amp;#34;&amp;gt;&amp;lt;/custom-select&amp;gt; 子組件，變更時選擇的數值：{{ selectedValue }} &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; import customSelect from &amp;#34;./components/CustomSelect.vue&amp;#34;; export default { name: &amp;#34;App&amp;#34;, components: { customSelect, }, data() { return { selectedValue: null, title: &amp;#34;縣市&amp;#34;, parentSelectedValue: null, }; }, methods: { getSelectedValue(val) { this.selectedValue = val; }, handleChange(value) { this.parentSelectedValue = value; }, }, }; &amp;lt;/script&amp;gt; &amp;lt;style&amp;gt;&amp;lt;/style&amp;gt; 子組件 CustomSelect.vue &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;b&amp;gt;{{ title }}：&amp;lt;/b&amp;gt; &amp;lt;el-select v-model=&amp;#34;value&amp;#34; placeholder=&amp;#34;請選擇縣市&amp;#34; @change=&amp;#34;selectedChange&amp;#34;&amp;gt; &amp;lt;el-option v-for=&amp;#34;item in options&amp;#34; :key=&amp;#34;item.</description>
    </item>
    
    <item>
      <title>建立 Vue.js 前端專案</title>
      <link>http://example.org/posts/202303191040/</link>
      <pubDate>Sun, 19 Mar 2023 22:40:42 +0800</pubDate>
      
      <guid>http://example.org/posts/202303191040/</guid>
      <description> 安裝 Node.js 安裝 Vue CLI npm install -g @vue/cli 創建 Vue.js 專案 vue create my-project 啟動 Vue.js 專案 cd my-project npm run serve </description>
    </item>
    
    <item>
      <title>Vue Provide 和 Inject</title>
      <link>http://example.org/posts/20230316/</link>
      <pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/20230316/</guid>
      <description>原本要傳遞三層
App -&amp;gt; FirstLayer -&amp;gt; SecondLayer -&amp;gt; ThirdLayer
可使用Provide和Inject提供跨多層組件傳遞數據的方式
App -&amp;gt; ThirdLayer
App.vue &amp;lt;template&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;div :class=&amp;#34;theme&amp;#34;&amp;gt; &amp;lt;button @click=&amp;#34;changeFontSize&amp;#34;&amp;gt;&amp;#34;第一層&amp;#34;字型變大&amp;lt;/button&amp;gt; &amp;lt;FirstLayer ref=&amp;#34;first&amp;#34; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; import FirstLayer from &amp;#34;./components/FirstLayer&amp;#34;; export default { name: &amp;#34;App&amp;#34;, data() { return { myName: &amp;#34;ming&amp;#34;, theme: &amp;#34;theme&amp;#34; }; }, provide() { return { myName: this.myName, changeBgColor: this.changeBgColor }; }, components: { FirstLayer }, methods: { changeBgColor() { console.log(&amp;#34;changeBgColor&amp;#34;); this.theme = &amp;#34;dark-theme&amp;#34;; }, changeFontSize() { this.</description>
    </item>
    
    <item>
      <title>Git Tutorial</title>
      <link>http://example.org/posts/git-tutorial/</link>
      <pubDate>Sat, 06 Aug 2022 16:20:33 +0800</pubDate>
      
      <guid>http://example.org/posts/git-tutorial/</guid>
      <description>Git設定 查看設定 git config &amp;ndash;list
設定帳號 git config &amp;ndash;global user.name &amp;ldquo;hezhengmin&amp;rdquo;
設定信箱 git config &amp;ndash;global user.email &amp;ldquo;zhengmin099@gmail.com&amp;rdquo;
Git基本用法 建立Repository git init
複製他人專案 git clone https://github.com/hezhengmin/Minesweeper.git
檢查狀態 git status
查詢記錄 git log
新增單一檔案 git add &amp;lt;檔案名稱&amp;gt;
新增全部的檔案 git add .
git add &amp;ndash;all
全部修改提交 git commit -am &amp;ldquo;modified&amp;rdquo;
提交版本 git commit -m &amp;ldquo;填寫版本資訊&amp;rdquo;
推送到你的遠端 git push origin master
遠端主機分支master更新到本地主機 git pull origin master
刪除檔案 git rm &amp;ldquo;1. Two Sum.cpp&amp;rdquo;
Git分支用法 建立新branch並切換過去 git checkout -b &amp;lt;branch名稱&amp;gt;</description>
    </item>
    
    <item>
      <title>Postman-儲存JwtToken為全域變數</title>
      <link>http://example.org/posts/postman-post/</link>
      <pubDate>Sat, 06 Aug 2022 14:09:08 +0800</pubDate>
      
      <guid>http://example.org/posts/postman-post/</guid>
      <description>1. 新增script const resp = pm.response.json(); pm.environment.set(&amp;#34;jwtToken&amp;#34;, resp.jwtToken) 程式回傳jwt token 2. 新增JWT變數 3. Request API上加入Token (Authorization) 4. Request API上加入Token (Header) 參考 Postman 儲存 API 變數 JWT Token 驗證資訊</description>
    </item>
    
    <item>
      <title>建立網站</title>
      <link>http://example.org/posts/my-first-post/</link>
      <pubDate>Sun, 29 May 2022 23:30:30 +0800</pubDate>
      
      <guid>http://example.org/posts/my-first-post/</guid>
      <description>安裝 Hugo 官方提供 Hugo安裝路徑 設定環境變數 創建新站點 確認有無安裝hugo hugo version 建立 hugo new site quickstart 添加主題 cd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke 添加一些內容 hugo new posts/my-first-post.md 例如 D:\Github\Hugo\quickstart&amp;gt; hugo new posts/202303191040.md 啟動 Hugo 服務器 hugo server -D 構建靜態頁面 hugo -D cd public file_server . git init git remote add origin https://github.com/hezhengmin/hezhengmin.github.io.git git add -A git commit -m &amp;#34;init site&amp;#34; git push origin master 開啟http://localhost:1313/ 測試網站 PS D:\Github\Hugo&amp;gt; cd quickstart PS D:\Github\Hugo\quickstart&amp;gt; hugo server -D 參考 https://gohugo.</description>
    </item>
    
  </channel>
</rss>
